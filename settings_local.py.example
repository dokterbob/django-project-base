# Load the default settings from settings_default.py
from settings_default import *

# Attempt to load 'secret' settings, containing (ie.) passwords
# from settings_secret.py - but fail silently if this is not possible.
try:
    from settings_secret import *
except ImportError:
    pass

# Uncomment to disable debugging
# DEBUG = False

import logging

if DEBUG:
    # Log debug messages to standard output by default
    logging.basicConfig(level=logging.DEBUG,
                        format='%(asctime)s %(levelname)-8s %(message)s',
                        datefmt='[%d/%b/%Y %H:%M:%S]')

    # Increase DB debug level
    logging.getLogger('django.db.backends').setLevel(logging.WARNING)

    DEBUG_TOOLBAR_CONFIG = {
        'INTERCEPT_REDIRECTS' : False,
    }

    # Consider ourself as internal IP
    from socket import gethostname, gethostbyname
    try:
        hostname = gethostbyname(gethostname())
        INTERNAL_IPS = ('127.0.0.1', hostname)
    except:
        INTERNAL_IPS = ('127.0.0.1', )

    # Default to SQLite database for debugging
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': path.join(PROJECT_ROOT, 'database.sqlite')
        }
    }

    # Send email to console by default
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

    # Make Celery use Django DB as transport
    INSTALLED_APPS.append('kombu.transport.django')
    BROKER_URL = 'django://'

    # Make Celery debugging a whole lot easier by executing tasks directly
    # and allowing them to propagate exceptions.

    CELERY_ALWAYS_EAGER = True
    CELERY_EAGER_PROPAGATES_EXCEPTIONS = True

else:
    # No debuggin and log errors & warnings to sentry
    logging.basicConfig(level=logging.WARNING,
                        format='%(levelname)-8s %(message)s')


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': '',
#         'USER': '',
#         'PASSWORD': '',
#         'HOST': '',
#         'PORT': ''
#     }
# }


# Just append to the default value
# INSTALLED_APPS += [
# 	'my_little_app',
# ]


# Email settings
# EMAIL_HOST = ''
# DEFAULT_FROM_EMAIL = ''


# Cache settings
# CACHE_BACKEND = 'locmem://'
# CACHE_PREFIX = DJANGO_PROJECT
# CACHE_TIMEOUT = 60


# Enable debug_toolbar
# INSTALLED_APPS.append('debug_toolbar')
# MIDDLEWARE_CLASSES.append('debug_toolbar.middleware.DebugToolbarMiddleware')


# Sentry/Raven logging
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': True,
#     'root': {
#         'level': 'WARNING',
#         'handlers': ['sentry'],
#     },
#     'formatters': {
#         'verbose': {
#             'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
#         },
#     },
#     'handlers': {
#         'sentry': {
#             'level': 'ERROR',

#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'verbose'
#         }
#     },
#     'loggers': {
#         'django.db.backends': {
#             'level': 'ERROR',
#             'handlers': ['console'],
#             'propagate': False,
#         },
#         'raven': {
#             'level': 'DEBUG',
#             'handlers': ['console'],
#             'propagate': False,
#         },
#         'sentry.errors': {
#             'level': 'DEBUG',
#             'handlers': ['console'],
#             'propagate': False,
#         },
#     },
# }

